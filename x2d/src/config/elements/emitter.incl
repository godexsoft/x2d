//
//  emitter.incl
//  x2d
//
//  Created by Alex Kremer on 3/4/13.
//  Copyright (c) 2013 godexsoft. All rights reserved.
//

/**
 * @brief Support for '<emitter>' configuration node.
 */ 
class emitter_cfg
: public cfg_base
{
    // allow config to access private members directly
    friend class configuration;

public:
    
    emitter_cfg(configuration& cfg)
    : config_(cfg)
    , position_(glm::vec2(0.0f, 0.0f))
    , gravity_(glm::vec2(0.0f, 0.0f))
    , start_color_(color_info(0.0f, 0.0f, 0.0f, 0.0f))
    , finish_color_(color_info(0.0f, 0.0f, 0.0f, 0.0f))
    {
    }
    
    /**
     * Create a new emitter instance and return it without saving a local copy.
     */
    boost::shared_ptr<emitter> create();
    
private:
    configuration& config_;

    int                 type_;
    std::string         sprite_;

    value<glm::vec2>    position_;
    value<float>        speed_;
    value<float>        life_span_;
    value<float>        angle_;
    value<glm::vec2>    gravity_;
    value<float>        radial_acceleration_;
    value<float>        tangential_acceleration_;
    value<color_info>   start_color_;
    value<color_info>   finish_color_;
    int                 max_particles_;
    float               duration_;
    int                 blend_src_;
    int                 blend_dst_;
    value<float>        start_size_;
    value<float>        finish_size_;
    value<float>        max_radius_;
    value<float>        min_radius_;
    value<float>        radius_speed_;
    value<float>        rotate_per_second_;
    value<float>        rotation_start_;
    value<float>        rotation_end_;
};
