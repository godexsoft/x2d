//
//  camera.incl
//  x2d
//
//  Created by Alex Kremer on 1/7/12.
//  Copyright (c) 2012 godexsoft. All rights reserved.
//

/**
 * @brief Support for '<camera>' configuration node.
 * @see viewport_cfg
 */ 
class camera_cfg
: public cfg_base
{
public:    
    /**
     * @param[in] c       The configuration
     * @param[in] f       Camera frustum
     * @param[in] rot     Rotation expressed in degrees
     * @param[in] zm      Zoom level (scale)
     * @param[in] pos     Position of the camera (given in world space)
     */
    camera_cfg(configuration& c, const std::string& p, const size& f, 
               const value_holder<float>& rot, const value_holder<float>& zm, 
               const value_holder<glm::vec2>& pos)
    : config_(c)
    , parent_(p)
    , frustum_(f)
    , rotation_(rot)
    , zoom_(zm)
    , position_(pos)
    {            
    }
     
    /**
     * Create if required and return a shared version of the camera.
     */
    boost::shared_ptr<camera> get();
    
private:
    configuration&           config_;
    std::string              parent_;
    size                     frustum_;
    value_holder<float>      rotation_;
    value_holder<float>      zoom_;
    value_holder<glm::vec2>  position_;
    boost::weak_ptr<camera>  inst_;
};