//
//  input.incl
//  x2d
//
//  Created by Alex Kremer on 1/7/12.
//  Copyright (c) 2012 godexsoft. All rights reserved.
//

/**
 * @brief Support for '<input>' configuration node.
 */ 
class input_cfg
: public cfg_base
{
public:      
    /**
     * @param[in] k             Kernel object
     * @param[in] want_touch    true if touch input required; false otherwise
     * @param[in] want_accel    true if accelerometer input required; false otherwise
     */
    input_cfg(kernel& k, bool want_touch, bool want_accel)
    : kernel_(k)
    , want_touch_(want_touch)
    , want_accel_(want_accel)
    {            
    }
    
    /**
     * Create if required and return a shared version of the input manager.
     */
    boost::shared_ptr<input_manager> get()
    {
        if( boost::shared_ptr<input_manager> p = inst_.lock() )
        {            
            // already exists outside of cfg
            return p;
        }
        else
        {
            boost::shared_ptr<input_manager> r = 
                boost::shared_ptr<input_manager>( 
                    new input_manager(kernel_, want_touch_, want_accel_) );
            inst_ = r;
            return r;
        }
    }
    
private:
    kernel&                         kernel_;
    bool                            want_touch_;
    bool                            want_accel_;
    boost::weak_ptr<input_manager>  inst_;
};